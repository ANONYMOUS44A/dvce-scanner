#!/bin/bash
clear
location=$(pwd)
cd /
# Make Configs
if [[ "$(uname -o 2>/dev/null)" == "Android" ]]; then
    continue
fi

# Extracting IP range start from eth0
prefix=$(ip addr show eth0 | grep -oP 'inet \K([0-9]{1,3}\.){3}' | tr -d ' ')
if [ -z "$prefix" ]; then
    echo "Error: Could not determine IP address range. Exiting."
    exit 1
fi

# Function to get the maximum length of an array of strings
max_length() {
    local max=0
    for i in "$@"; do
        local len=${#i}
        if [ "$len" -gt "$max" ]; then
            max="$len"
        fi
    done
    echo "$max"
}

# Array to store device information
declare -a devices=()

# Scan for Devices IP & DNSs using arp-scan
mapfile -t scan_results < <(sudo arp-scan --localnet | grep -E "([0-9A-Fa-f]{2}:){5}([0-9A-Fa-f]{2})" | awk '{print $1,$2}')

# Process the scan results
for line in "${scan_results[@]}"; do
    ip=$(echo "$line" | awk '{print $1}')
    mac=$(echo "$line" | awk '{print $2}')
    dns_name=$(host "$ip" | awk '/domain name pointer/{print $5}')
    if [ -z "$dns_name" ]; then
        dns_name="Unknown"
    fi
    devices+=("$dns_name" "$ip ($mac)")
done

# Calculate field widths
max_dns_length=$(max_length "${devices[@]::${#devices[@]}/2}")
max_ip_length=$(max_length "${devices[@]:${#devices[@]}/2}")

# Print the formatted output
clear
echo " ┌────────────────────────────────────────┐ "
echo " │          |D|V|C|E|-|S|C|A|N|           │ "
echo " └────────────────────────────────────────┘ "
echo "    .:: DEVELOPED BY PENTAGONE GROUP ::.    "
echo "────────────────────────────────────────────"
echo " └─[ PREFIX ] ➤  $prefix{1-255}               "
echo "────────────────────────────────────────────"
echo
echo -e "┌──────────────────────────────────┬──────────────────────────────────┐"
echo -e "│         DEVICE DNS NAMES         │    DEVICES IP & MAC ADDRESSES    │"
echo -e "└──────────────────────────────────┴──────────────────────────────────┘"

for ((i = 0; i < ${#devices[@]}; i += 2)); do
    printf "│ %-*s │ %-*s │\n" "$((max_dns_length + 2))" "${devices[$i]}" "$((max_ip_length + 2))" "${devices[$((i + 1))]}"
done

echo
echo "───────────────────────────────────────────"
echo "                  Done.                    "
echo "───────────────────────────────────────────"
cd $location
